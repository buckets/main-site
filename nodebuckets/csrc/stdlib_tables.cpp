/* Generated by Nim Compiler v0.19.1 */
/*   (c) 2018 Andreas Rumpf */
/* The generated code is subject to the original license. */
#define NIM_NEW_MANGLING_RULES
#define NIM_INTBITS 64

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct tyObject_Table_VhiYQVROvZwCBgplqpTfWg;
struct tySequence_hC9cYWgGj63WaE3PXFdHUGw;
struct TNimType;
struct TNimNode;
struct tyTuple_eq1RM0xbpgPWPAQamwDgbA;
struct tyObject_BudgetFilecolonObjectType__yi1kAYh8kb3f1o4vS0ZTBQ;
struct TGenericSeq;
struct tyObject_Table_VhiYQVROvZwCBgplqpTfWg {
tySequence_hC9cYWgGj63WaE3PXFdHUGw* data;
NI counter;
};
typedef NU8 tyEnum_TNimKind_jIBKr1ejBgsfM33Kxw4j7A;
typedef NU8 tySet_tyEnum_TNimTypeFlag_v8QUszD1sWlSIWZz7mC4bQ;
typedef N_NIMCALL_PTR(void, tyProc_ojoeKfW4VYIm36I9cpDTQIg) (void* p, NI op);
typedef N_NIMCALL_PTR(void*, tyProc_WSm2xU5ARYv9aAR4l0z9c9auQ) (void* p);
struct TNimType {
NI size;
tyEnum_TNimKind_jIBKr1ejBgsfM33Kxw4j7A kind;
tySet_tyEnum_TNimTypeFlag_v8QUszD1sWlSIWZz7mC4bQ flags;
TNimType* base;
TNimNode* node;
void* finalizer;
tyProc_ojoeKfW4VYIm36I9cpDTQIg marker;
tyProc_WSm2xU5ARYv9aAR4l0z9c9auQ deepcopy;
};
struct tyTuple_eq1RM0xbpgPWPAQamwDgbA {
NI Field0;
NI Field1;
tyObject_BudgetFilecolonObjectType__yi1kAYh8kb3f1o4vS0ZTBQ* Field2;
};
typedef NU8 tyEnum_TNimNodeKind_unfNsxrcATrufDZmpBq4HQ;
struct TNimNode {
tyEnum_TNimNodeKind_unfNsxrcATrufDZmpBq4HQ kind;
NI offset;
TNimType* typ;
NCSTRING name;
NI len;
TNimNode** sons;
};
struct TGenericSeq {
NI len;
NI reserved;
};
struct tySequence_hC9cYWgGj63WaE3PXFdHUGw : TGenericSeq {
  tyTuple_eq1RM0xbpgPWPAQamwDgbA data[SEQ_DECL_SIZE];
};
N_NIMCALL(void, nimGCvisit)(void* d, NI op);
static N_NIMCALL(void, Marker_tySequence_hC9cYWgGj63WaE3PXFdHUGw)(void* p, NI op);
N_NIMCALL(void, genericReset)(void* dest, TNimType* mt);
N_NIMCALL(void*, newSeq)(TNimType* typ, NI len);
N_NIMCALL(void, unsureAsgnRef)(void** dest, void* src);
TNimType NTI_VhiYQVROvZwCBgplqpTfWg_;
TNimType NTI_eq1RM0xbpgPWPAQamwDgbA_;
extern TNimType NTI_rR5Bzr1D5krxoo1NcNyeMA_;
extern TNimType NTI_5PWEcVklnzmjVvFuGsuXhQ_;
TNimType NTI_hC9cYWgGj63WaE3PXFdHUGw_;
static N_NIMCALL(void, Marker_tySequence_hC9cYWgGj63WaE3PXFdHUGw)(void* p, NI op) {
	tySequence_hC9cYWgGj63WaE3PXFdHUGw* a;
	NI T1_;
	a = (tySequence_hC9cYWgGj63WaE3PXFdHUGw*)p;
	T1_ = (NI)0;
	for (T1_ = 0; T1_ < (a ? a->len : 0); T1_++) {
	nimGCvisit((void*)a->data[T1_].Field2, op);
	}
}

N_LIB_PRIVATE N_NIMCALL(void, initTable_jqzpDgYBM9aUAc5X3WbaZOA)(NI initialSize, tyObject_Table_VhiYQVROvZwCBgplqpTfWg* Result) {
	genericReset((void*)Result, (&NTI_VhiYQVROvZwCBgplqpTfWg_));
	(*Result).counter = ((NI) 0);
	unsureAsgnRef((void**) (&(*Result).data), (tySequence_hC9cYWgGj63WaE3PXFdHUGw*) newSeq((&NTI_hC9cYWgGj63WaE3PXFdHUGw_), ((NI) (initialSize))));
}
N_LIB_PRIVATE N_NIMCALL(void, stdlib_tablesInit000)(void) {
{
	TFrame FR_; FR_.len = 0;
}
}

N_LIB_PRIVATE N_NIMCALL(void, stdlib_tablesDatInit000)(void) {
static TNimNode* TM_4SoG2KRQy3oMm9aUzSLtGrA_2[2];
static TNimNode* TM_4SoG2KRQy3oMm9aUzSLtGrA_3[3];
static TNimNode TM_4SoG2KRQy3oMm9aUzSLtGrA_0[7];
NTI_VhiYQVROvZwCBgplqpTfWg_.size = sizeof(tyObject_Table_VhiYQVROvZwCBgplqpTfWg);
NTI_VhiYQVROvZwCBgplqpTfWg_.kind = 18;
NTI_VhiYQVROvZwCBgplqpTfWg_.base = 0;
NTI_VhiYQVROvZwCBgplqpTfWg_.flags = 2;
TM_4SoG2KRQy3oMm9aUzSLtGrA_2[0] = &TM_4SoG2KRQy3oMm9aUzSLtGrA_0[1];
NTI_eq1RM0xbpgPWPAQamwDgbA_.size = sizeof(tyTuple_eq1RM0xbpgPWPAQamwDgbA);
NTI_eq1RM0xbpgPWPAQamwDgbA_.kind = 18;
NTI_eq1RM0xbpgPWPAQamwDgbA_.base = 0;
NTI_eq1RM0xbpgPWPAQamwDgbA_.flags = 2;
TM_4SoG2KRQy3oMm9aUzSLtGrA_3[0] = &TM_4SoG2KRQy3oMm9aUzSLtGrA_0[3];
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[3].kind = 1;
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[3].offset = offsetof(tyTuple_eq1RM0xbpgPWPAQamwDgbA, Field0);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[3].typ = (&NTI_rR5Bzr1D5krxoo1NcNyeMA_);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[3].name = "Field0";
TM_4SoG2KRQy3oMm9aUzSLtGrA_3[1] = &TM_4SoG2KRQy3oMm9aUzSLtGrA_0[4];
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[4].kind = 1;
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[4].offset = offsetof(tyTuple_eq1RM0xbpgPWPAQamwDgbA, Field1);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[4].typ = (&NTI_rR5Bzr1D5krxoo1NcNyeMA_);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[4].name = "Field1";
TM_4SoG2KRQy3oMm9aUzSLtGrA_3[2] = &TM_4SoG2KRQy3oMm9aUzSLtGrA_0[5];
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[5].kind = 1;
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[5].offset = offsetof(tyTuple_eq1RM0xbpgPWPAQamwDgbA, Field2);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[5].typ = (&NTI_5PWEcVklnzmjVvFuGsuXhQ_);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[5].name = "Field2";
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[2].len = 3; TM_4SoG2KRQy3oMm9aUzSLtGrA_0[2].kind = 2; TM_4SoG2KRQy3oMm9aUzSLtGrA_0[2].sons = &TM_4SoG2KRQy3oMm9aUzSLtGrA_3[0];
NTI_eq1RM0xbpgPWPAQamwDgbA_.node = &TM_4SoG2KRQy3oMm9aUzSLtGrA_0[2];
NTI_hC9cYWgGj63WaE3PXFdHUGw_.size = sizeof(tySequence_hC9cYWgGj63WaE3PXFdHUGw*);
NTI_hC9cYWgGj63WaE3PXFdHUGw_.kind = 24;
NTI_hC9cYWgGj63WaE3PXFdHUGw_.base = (&NTI_eq1RM0xbpgPWPAQamwDgbA_);
NTI_hC9cYWgGj63WaE3PXFdHUGw_.flags = 2;
NTI_hC9cYWgGj63WaE3PXFdHUGw_.marker = Marker_tySequence_hC9cYWgGj63WaE3PXFdHUGw;
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[1].kind = 1;
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[1].offset = offsetof(tyObject_Table_VhiYQVROvZwCBgplqpTfWg, data);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[1].typ = (&NTI_hC9cYWgGj63WaE3PXFdHUGw_);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[1].name = "data";
TM_4SoG2KRQy3oMm9aUzSLtGrA_2[1] = &TM_4SoG2KRQy3oMm9aUzSLtGrA_0[6];
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[6].kind = 1;
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[6].offset = offsetof(tyObject_Table_VhiYQVROvZwCBgplqpTfWg, counter);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[6].typ = (&NTI_rR5Bzr1D5krxoo1NcNyeMA_);
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[6].name = "counter";
TM_4SoG2KRQy3oMm9aUzSLtGrA_0[0].len = 2; TM_4SoG2KRQy3oMm9aUzSLtGrA_0[0].kind = 2; TM_4SoG2KRQy3oMm9aUzSLtGrA_0[0].sons = &TM_4SoG2KRQy3oMm9aUzSLtGrA_2[0];
NTI_VhiYQVROvZwCBgplqpTfWg_.node = &TM_4SoG2KRQy3oMm9aUzSLtGrA_0[0];
}

