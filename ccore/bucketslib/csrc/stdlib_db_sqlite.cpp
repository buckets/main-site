/* Generated by Nim Compiler v0.19.1 */
/*   (c) 2018 Andreas Rumpf */
/* The generated code is subject to the original license. */
#define NIM_NEW_MANGLING_RULES
#define NIM_INTBITS 64

#include "nimbase.h"
#include <string.h>
#include <new>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA;
struct NimStringDesc;
struct TGenericSeq;
struct tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw;
struct tyObject_DbError_9cp8FUMATyqFmLaAKCXEjCQ;
struct tyObject_IOError_iLZrPn9anoh9ad1MmO0RczFw;
struct tyObject_CatchableError_qrLSDoe2oBoAqNtJ9badtnA;
struct Exception;
struct RootObj;
struct TNimType;
struct TNimNode;
struct tySequence_uB9b75OUPRENsBAu4AnoePA;
struct tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g;
struct tyObject_CellSeq_Axo1XVm9aaQueTOldv8le5w;
struct tyObject_GcHeap_1TRH1TZMaVZTnLNcIHuNFQ;
struct tyObject_GcStack_7fytPA5bBsob6See21YMRA;
struct tyObject_MemRegion_x81NhDv59b8ercDZ9bi85jyg;
struct tyObject_SmallChunk_tXn60W2f8h3jgAYdEmy5NQ;
struct tyObject_BigChunk_Rv9c70Uhp2TytkX7eH78qEg;
struct tyObject_LLChunk_XsENErzHIZV9bhvyJx56wGw;
struct tyObject_IntSet_EZObFrE3NC9bIb3YMkY9crZA;
struct tyObject_Trunk_W0r8S0Y3UGke6T9bIUWnnuw;
struct tyObject_AvlNode_IaqjtwKhxLEpvDS9bct9blEw;
struct tyObject_HeapLinks_PDV1HBZ8CQSQJC9aOBFNRSg;
struct tyTuple_ujsjpB2O9cjj3uDHsXbnSzg;
struct tyObject_GcStat_0RwLoVBHZPfUAcLczmfQAg;
struct tyObject_CellSet_jG87P0AI9aZtss9ccTYBIISQ;
struct tyObject_PageDesc_fublkgIY4LG3mT51LU2WHg;
struct tyObject_StackTraceEntry_oLyohQ7O2XOvGnflOss8EA;
struct TGenericSeq {
NI len;
NI reserved;
};
typedef NIM_CHAR tyUncheckedArray_py3s8sMDoAoBkn8uuh0ZzQ[1];
struct NimStringDesc : public TGenericSeq {
tyUncheckedArray_py3s8sMDoAoBkn8uuh0ZzQ data;
};
typedef NU8 tyEnum_TNimKind_jIBKr1ejBgsfM33Kxw4j7A;
typedef NU8 tySet_tyEnum_TNimTypeFlag_v8QUszD1sWlSIWZz7mC4bQ;
typedef N_NIMCALL_PTR(void, tyProc_ojoeKfW4VYIm36I9cpDTQIg) (void* p, NI op);
typedef N_NIMCALL_PTR(void*, tyProc_WSm2xU5ARYv9aAR4l0z9c9auQ) (void* p);
struct TNimType {
NI size;
tyEnum_TNimKind_jIBKr1ejBgsfM33Kxw4j7A kind;
tySet_tyEnum_TNimTypeFlag_v8QUszD1sWlSIWZz7mC4bQ flags;
TNimType* base;
TNimNode* node;
void* finalizer;
tyProc_ojoeKfW4VYIm36I9cpDTQIg marker;
tyProc_WSm2xU5ARYv9aAR4l0z9c9auQ deepcopy;
};
struct RootObj {
TNimType* m_type;
};
N_NIMCALL(void, popCurrentExceptionEx)(NU id);struct Exception : public RootObj {
virtual void raise() {throw *this;}
~Exception() {if(this->raise_id) popCurrentExceptionEx(this->raise_id);}
Exception* parent;
NCSTRING name;
NimStringDesc* message;
tySequence_uB9b75OUPRENsBAu4AnoePA* trace;
NU raise_id;
Exception* up;
};
struct tyObject_CatchableError_qrLSDoe2oBoAqNtJ9badtnA : public Exception {
virtual void raise() {throw *this;}
};
struct tyObject_IOError_iLZrPn9anoh9ad1MmO0RczFw : public tyObject_CatchableError_qrLSDoe2oBoAqNtJ9badtnA {
virtual void raise() {throw *this;}
};
struct tyObject_DbError_9cp8FUMATyqFmLaAKCXEjCQ : public tyObject_IOError_iLZrPn9anoh9ad1MmO0RczFw {
virtual void raise() {throw *this;}
};
typedef NU8 tyEnum_TNimNodeKind_unfNsxrcATrufDZmpBq4HQ;
struct TNimNode {
tyEnum_TNimNodeKind_unfNsxrcATrufDZmpBq4HQ kind;
NI offset;
TNimType* typ;
NCSTRING name;
NI len;
TNimNode** sons;
};
struct tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g {
NI refcount;
TNimType* typ;
};
struct tyObject_GcStack_7fytPA5bBsob6See21YMRA {
void* bottom;
};
struct tyObject_CellSeq_Axo1XVm9aaQueTOldv8le5w {
NI len;
NI cap;
tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g** d;
};
typedef tyObject_SmallChunk_tXn60W2f8h3jgAYdEmy5NQ* tyArray_SiRwrEKZdLgxqz9a9aoVBglg[512];
typedef NU32 tyArray_BHbOSqU1t9b3Gt7K2c6fQig[24];
typedef tyObject_BigChunk_Rv9c70Uhp2TytkX7eH78qEg* tyArray_N1u1nqOgmuJN9cSZrnMHgOQ[32];
typedef tyArray_N1u1nqOgmuJN9cSZrnMHgOQ tyArray_B6durA4ZCi1xjJvRtyYxMg[24];
typedef tyObject_Trunk_W0r8S0Y3UGke6T9bIUWnnuw* tyArray_lh2A89ahMmYg9bCmpVaplLbA[256];
struct tyObject_IntSet_EZObFrE3NC9bIb3YMkY9crZA {
tyArray_lh2A89ahMmYg9bCmpVaplLbA data;
};
typedef tyObject_AvlNode_IaqjtwKhxLEpvDS9bct9blEw* tyArray_0aOLqZchNi8nWtMTi8ND8w[2];
struct tyObject_AvlNode_IaqjtwKhxLEpvDS9bct9blEw {
tyArray_0aOLqZchNi8nWtMTi8ND8w link;
NI key;
NI upperBound;
NI level;
};
struct tyTuple_ujsjpB2O9cjj3uDHsXbnSzg {
tyObject_BigChunk_Rv9c70Uhp2TytkX7eH78qEg* Field0;
NI Field1;
};
typedef tyTuple_ujsjpB2O9cjj3uDHsXbnSzg tyArray_LzOv2eCDGiceMKQstCLmhw[30];
struct tyObject_HeapLinks_PDV1HBZ8CQSQJC9aOBFNRSg {
NI len;
tyArray_LzOv2eCDGiceMKQstCLmhw chunks;
tyObject_HeapLinks_PDV1HBZ8CQSQJC9aOBFNRSg* next;
};
struct tyObject_MemRegion_x81NhDv59b8ercDZ9bi85jyg {
NI minLargeObj;
NI maxLargeObj;
tyArray_SiRwrEKZdLgxqz9a9aoVBglg freeSmallChunks;
NU32 flBitmap;
tyArray_BHbOSqU1t9b3Gt7K2c6fQig slBitmap;
tyArray_B6durA4ZCi1xjJvRtyYxMg matrix;
tyObject_LLChunk_XsENErzHIZV9bhvyJx56wGw* llmem;
NI currMem;
NI maxMem;
NI freeMem;
NI occ;
NI lastSize;
tyObject_IntSet_EZObFrE3NC9bIb3YMkY9crZA chunkStarts;
tyObject_AvlNode_IaqjtwKhxLEpvDS9bct9blEw* root;
tyObject_AvlNode_IaqjtwKhxLEpvDS9bct9blEw* deleted;
tyObject_AvlNode_IaqjtwKhxLEpvDS9bct9blEw* last;
tyObject_AvlNode_IaqjtwKhxLEpvDS9bct9blEw* freeAvlNodes;
NIM_BOOL locked;
NIM_BOOL blockChunkSizeIncrease;
NI nextChunkSize;
tyObject_AvlNode_IaqjtwKhxLEpvDS9bct9blEw bottomData;
tyObject_HeapLinks_PDV1HBZ8CQSQJC9aOBFNRSg heapLinks;
};
struct tyObject_GcStat_0RwLoVBHZPfUAcLczmfQAg {
NI stackScans;
NI cycleCollections;
NI maxThreshold;
NI maxStackSize;
NI maxStackCells;
NI cycleTableSize;
NI64 maxPause;
};
struct tyObject_CellSet_jG87P0AI9aZtss9ccTYBIISQ {
NI counter;
NI max;
tyObject_PageDesc_fublkgIY4LG3mT51LU2WHg* head;
tyObject_PageDesc_fublkgIY4LG3mT51LU2WHg** data;
};
struct tyObject_GcHeap_1TRH1TZMaVZTnLNcIHuNFQ {
tyObject_GcStack_7fytPA5bBsob6See21YMRA stack;
NI cycleThreshold;
tyObject_CellSeq_Axo1XVm9aaQueTOldv8le5w zct;
tyObject_CellSeq_Axo1XVm9aaQueTOldv8le5w decStack;
tyObject_CellSeq_Axo1XVm9aaQueTOldv8le5w tempStack;
NI recGcLock;
tyObject_MemRegion_x81NhDv59b8ercDZ9bi85jyg region;
tyObject_GcStat_0RwLoVBHZPfUAcLczmfQAg stat;
tyObject_CellSet_jG87P0AI9aZtss9ccTYBIISQ marked;
tyObject_CellSeq_Axo1XVm9aaQueTOldv8le5w additionalRoots;
NI gcThreadId;
};
struct tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA {
char dummy;
};
struct tyObject_StackTraceEntry_oLyohQ7O2XOvGnflOss8EA {
NCSTRING procname;
NI line;
NCSTRING filename;
};
struct tySequence_uB9b75OUPRENsBAu4AnoePA : TGenericSeq {
  tyObject_StackTraceEntry_oLyohQ7O2XOvGnflOss8EA data[SEQ_DECL_SIZE];
};
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, tryExec_Wy7WfNcrDtpQlAr7l6ZBZw)(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* db, NimStringDesc* query, NimStringDesc** args, NI argsLen_0);
N_LIB_PRIVATE N_NIMCALL(NimStringDesc*, dbFormat_4xitxSXjtmpEVS63UNhgwA)(NimStringDesc* formatstr, NimStringDesc** args, NI argsLen_0);
N_LIB_PRIVATE N_NIMCALL(NimStringDesc*, dbQuote_n8zdcw6t64ZGFNADbUlAfA)(NimStringDesc* s);
N_NIMCALL(NimStringDesc*, copyString)(NimStringDesc* src);
static N_INLINE(void, appendString)(NimStringDesc* dest, NimStringDesc* src);
static N_INLINE(void, copyMem_E1xtACub5WcDa3vbrIXbwgsystem)(void* dest, void* source, NI size);
static N_INLINE(void, nimCopyMem)(void* dest, void* source, NI size);
N_NIMCALL(NimStringDesc*, resizeString)(NimStringDesc* dest, NI addlen);
N_NIMCALL(NimStringDesc*, addChar)(NimStringDesc* s, NIM_CHAR c);
extern "C" N_CDECL(int, sqlite3_prepare_v2)(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* db, NCSTRING zSql, int nByte, tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw*& ppStmt, NCSTRING* pzTail);
static N_INLINE(NCSTRING, nimToCStringConv)(NimStringDesc* s);
extern "C" N_CDECL(NI32, sqlite3_step)(tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw* para1);
extern "C" N_CDECL(NI32, sqlite3_finalize)(tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw* pStmt);
N_LIB_PRIVATE N_NIMCALL(void, dbError_yRzNipQFOsKqLVySy7Je9bw)(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* db) __attribute__((noreturn));
N_NIMCALL(void*, newObj)(TNimType* typ, NI size);
extern "C" N_CDECL(NCSTRING, sqlite3_errmsg)(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* para1);
N_NIMCALL(NimStringDesc*, cstrToNimstr)(NCSTRING str);
static N_INLINE(void, asgnRefNoCycle)(void** dest, void* src);
static N_INLINE(tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g*, usrToCell_yB9aH5WIlwd0xkYrcdPeXrQsystem)(void* usr);
static N_INLINE(void, rtlAddZCT_MV4BBk6J1qu70IbBxwEn4w_2system)(tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g* c);
N_LIB_PRIVATE N_NOINLINE(void, addZCT_fCDI7oO1NNVXXURtxSzsRw)(tyObject_CellSeq_Axo1XVm9aaQueTOldv8le5w& s, tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g* c);
N_NIMCALL(void, popCurrentExceptionEx)(NU id);
N_NIMCALL(void, raiseException)(Exception* e, NCSTRING ename);
extern "C" N_CDECL(NI32, sqlite3_open)(NCSTRING filename, tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA*& ppDb);
extern TNimType NTI_ZVbaMVrRDW1Cj9bby6YsVhA_;
extern TNimType NTI_9cp8FUMATyqFmLaAKCXEjCQ_;
extern tyObject_GcHeap_1TRH1TZMaVZTnLNcIHuNFQ gch_IcYaEuuWivYAS86vFMTS3Q;
STRING_LITERAL(TM_Y7t52g9b69cVuzHT832OjgmA_2, "\'", 1);
STRING_LITERAL(TM_Y7t52g9b69cVuzHT832OjgmA_3, "\'\'", 2);

static N_INLINE(void, nimCopyMem)(void* dest, void* source, NI size) {
	void* T1_;
	T1_ = (void*)0;
	T1_ = memcpy(dest, source, ((size_t) (size)));
}

static N_INLINE(void, copyMem_E1xtACub5WcDa3vbrIXbwgsystem)(void* dest, void* source, NI size) {
	nimCopyMem(dest, source, size);
}

static N_INLINE(void, appendString)(NimStringDesc* dest, NimStringDesc* src) {
	{
		if (!!((src == NIM_NIL))) goto LA3_;
{		copyMem_E1xtACub5WcDa3vbrIXbwgsystem(((void*) ((&(*dest).data[(*dest).len]))), ((void*) ((*src).data)), ((NI) ((NI)((*src).len + ((NI) 1)))));
		(*dest).len += (*src).len;
}	}
	LA3_: ;
}

N_LIB_PRIVATE N_NIMCALL(NimStringDesc*, dbQuote_n8zdcw6t64ZGFNADbUlAfA)(NimStringDesc* s) {
	NimStringDesc* result;
	result = (NimStringDesc*)0;
	result = copyString(((NimStringDesc*) &TM_Y7t52g9b69cVuzHT832OjgmA_2));
	{
		NIM_CHAR c;
		c = (NIM_CHAR)0;
		NI i = ((NI) 0);
		NI L = (s ? s->len : 0);
		{
			while (1) {
				if (!(i < L)) goto LA3;
				c = s->data[i];
				{
					if (!((NU8)(c) == (NU8)(39))) goto LA6_;
{					result = resizeString(result, 2);
appendString(result, ((NimStringDesc*) &TM_Y7t52g9b69cVuzHT832OjgmA_3));
}				}
				goto LA4_;
				LA6_: ;
				{
					result = addChar(result, c);
				}
				LA4_: ;
				i += ((NI) 1);
			} LA3: ;
		}
	}
	result = addChar(result, 39);
	return result;
}

N_LIB_PRIVATE N_NIMCALL(NimStringDesc*, dbFormat_4xitxSXjtmpEVS63UNhgwA)(NimStringDesc* formatstr, NimStringDesc** args, NI argsLen_0) {
	NimStringDesc* result;
	result = (NimStringDesc*)0;
	result = ((NimStringDesc*) NIM_NIL);
	NI a = ((NI) 0);
	{
		NIM_CHAR c;
		NimStringDesc* colontmp_;
		c = (NIM_CHAR)0;
		colontmp_ = (NimStringDesc*)0;
		colontmp_ = formatstr;
		NI i = ((NI) 0);
		NI L = (colontmp_ ? colontmp_->len : 0);
		{
			while (1) {
				if (!(i < L)) goto LA3;
				c = colontmp_->data[i];
				{
					NimStringDesc* T8_;
					if (!((NU8)(c) == (NU8)(63))) goto LA6_;
{					T8_ = (NimStringDesc*)0;
					T8_ = dbQuote_n8zdcw6t64ZGFNADbUlAfA(args[a]);
					result = resizeString(result, (T8_ ? T8_->len : 0) + 0);
appendString(result, T8_);
					a += ((NI) 1);
}				}
				goto LA4_;
				LA6_: ;
				{
					result = addChar(result, c);
				}
				LA4_: ;
				i += ((NI) 1);
			} LA3: ;
		}
	}
	return result;
}

static N_INLINE(NCSTRING, nimToCStringConv)(NimStringDesc* s) {
	NCSTRING result;
	result = (NCSTRING)0;
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (s == NIM_NIL);
		if (T3_) goto LA4_;
		T3_ = ((*s).len == ((NI) 0));
		LA4_: ;
		if (!T3_) goto LA5_;
{		result = "";
}	}
	goto LA1_;
	LA5_: ;
	{
		result = ((NCSTRING) ((*s).data));
	}
	LA1_: ;
	return result;
}

N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, tryExec_Wy7WfNcrDtpQlAr7l6ZBZw)(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* db, NimStringDesc* query, NimStringDesc** args, NI argsLen_0) {
	NIM_BOOL result;
	NimStringDesc* q;
	tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw* stmt;
	result = (NIM_BOOL)0;
	q = dbFormat_4xitxSXjtmpEVS63UNhgwA(query, args, argsLen_0);
	stmt = (tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw*)0;
	{
		int T3_;
		T3_ = (int)0;
		T3_ = sqlite3_prepare_v2(db, nimToCStringConv(q), ((int) ((q ? q->len : 0))), stmt, NIM_NIL);
		if (!(T3_ == ((NI32) 0))) goto LA4_;
{		NI32 x = sqlite3_step(stmt);
		{
			NI32 T10_;
			if (!(x == ((NI) 101) || x == ((NI) 100))) goto LA8_;
{			T10_ = (NI32)0;
			T10_ = sqlite3_finalize(stmt);
			result = (T10_ == ((NI32) 0));
}		}
		LA8_: ;
}	}
	LA4_: ;
	return result;
}

static N_INLINE(tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g*, usrToCell_yB9aH5WIlwd0xkYrcdPeXrQsystem)(void* usr) {
	tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g* result;
	result = (tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g*)0;
	result = ((tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g*) ((NI)((NU64)(((NI) (ptrdiff_t) (usr))) - (NU64)(((NI) 16)))));
	return result;
}

static N_INLINE(void, rtlAddZCT_MV4BBk6J1qu70IbBxwEn4w_2system)(tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g* c) {
	addZCT_fCDI7oO1NNVXXURtxSzsRw(gch_IcYaEuuWivYAS86vFMTS3Q.zct, c);
}

static N_INLINE(void, asgnRefNoCycle)(void** dest, void* src) {
	{
		if (!!((src == NIM_NIL))) goto LA3_;
{		tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g* c = usrToCell_yB9aH5WIlwd0xkYrcdPeXrQsystem(src);
		(*c).refcount += ((NI) 8);
}	}
	LA3_: ;
	{
		if (!!(((*dest) == NIM_NIL))) goto LA7_;
{		tyObject_Cell_1zcF9cV8XIAtbN8h5HRUB8g* c_2 = usrToCell_yB9aH5WIlwd0xkYrcdPeXrQsystem((*dest));
		{
			(*c_2).refcount -= ((NI) 8);
			if (!((NU64)((*c_2).refcount) < (NU64)(((NI) 8)))) goto LA11_;
{			rtlAddZCT_MV4BBk6J1qu70IbBxwEn4w_2system(c_2);
}		}
		LA11_: ;
}	}
	LA7_: ;
	(*dest) = src;
}

N_LIB_PRIVATE N_NIMCALL(void, dbError_yRzNipQFOsKqLVySy7Je9bw)(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* db) {
	tyObject_DbError_9cp8FUMATyqFmLaAKCXEjCQ* e;
	NCSTRING T1_;
	e = (tyObject_DbError_9cp8FUMATyqFmLaAKCXEjCQ*)0;
	e = (tyObject_DbError_9cp8FUMATyqFmLaAKCXEjCQ*) newObj((&NTI_ZVbaMVrRDW1Cj9bby6YsVhA_), sizeof(tyObject_DbError_9cp8FUMATyqFmLaAKCXEjCQ));
	new (e) tyObject_DbError_9cp8FUMATyqFmLaAKCXEjCQ;
	(*e).m_type = (&NTI_9cp8FUMATyqFmLaAKCXEjCQ_);
	T1_ = (NCSTRING)0;
	T1_ = sqlite3_errmsg(db);
	asgnRefNoCycle((void**) (&(*e).message), cstrToNimstr(T1_));
	raiseException((Exception*)e, "DbError");
}

N_LIB_PRIVATE N_NIMCALL(void, exec_kASFnJjvwTJpKpmn9aQHmPg)(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* db, NimStringDesc* query, NimStringDesc** args, NI argsLen_0) {
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = tryExec_Wy7WfNcrDtpQlAr7l6ZBZw(db, query, args, argsLen_0);
		if (!!(T3_)) goto LA4_;
{		dbError_yRzNipQFOsKqLVySy7Je9bw(db);
}	}
	LA4_: ;
}

N_LIB_PRIVATE N_NIMCALL(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA*, open_SRJkmN7JR2aulOhbafCrYA)(NimStringDesc* connection, NimStringDesc* user, NimStringDesc* password, NimStringDesc* database) {
	tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* result;
	tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* db;
	result = (tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA*)0;
	db = (tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA*)0;
	{
		NI32 T3_;
		T3_ = (NI32)0;
		T3_ = sqlite3_open(nimToCStringConv(connection), db);
		if (!(T3_ == ((NI32) 0))) goto LA4_;
{		result = db;
}	}
	goto LA1_;
	LA4_: ;
	{
		dbError_yRzNipQFOsKqLVySy7Je9bw(db);
	}
	LA1_: ;
	return result;
}

N_LIB_PRIVATE N_NIMCALL(tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw*, setupQuery_6EQAJlzQgp6Lnc8upW20sQ)(tyObject_Sqlite3_xRZkbCqVWSKf8kX4o9cbKXA* db, NimStringDesc* query, NimStringDesc** args, NI argsLen_0) {
	tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw* result;
	NimStringDesc* q;
	result = (tyObject_Tstmt_KEhcjAECDwKIYLLjIzakvw*)0;
	q = dbFormat_4xitxSXjtmpEVS63UNhgwA(query, args, argsLen_0);
	{
		int T3_;
		T3_ = (int)0;
		T3_ = sqlite3_prepare_v2(db, nimToCStringConv(q), ((int) ((q ? q->len : 0))), result, NIM_NIL);
		if (!!((T3_ == ((NI32) 0)))) goto LA4_;
{		dbError_yRzNipQFOsKqLVySy7Je9bw(db);
}	}
	LA4_: ;
	return result;
}
N_LIB_PRIVATE N_NIMCALL(void, stdlib_db_sqliteInit000)(void) {
{
	TFrame FR_; FR_.len = 0;
}
}

N_LIB_PRIVATE N_NIMCALL(void, stdlib_db_sqliteDatInit000)(void) {
}

